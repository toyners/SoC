
PlayerData holds counts for resources, list of hidden and shown development cards. Gives VP count.
PlayerView holds number of resource cards, number of hidden development cards and list of shown development cards

GameBoardUpdate holds information on new settlements, cities, roads and robber location. Happens for every player

GameBoardData holds information on all locations, trails, settlements, cities, roads, resource providers and robber location.
Used on Server side and is the initial data sent to the client. Used by GameBoard on Server side as data repository.
- Verifies the settlement placement before passing to GameManager
- Verifies the road placement before passsing to GameManager
- Verifies the city placement before passing to GameManager

GameBoardManager holds all locations and roads and resource providers (via GameBoardData)
- Verifies the settlement placement before updating the board (via GameBoardData)
- Updates the board with a new settlement for a player
- Verifies the road placement before updating the board (via GameBoardData)
- Updates the board with a new road for a player
- Verifies the city placement before updating the board (via GameBoardData)
- Updates the board with a new city for a player
- Returns the resources manifest for a given dice roll to the GameManager
- Verifies that a player can make a trade with an owned port.

GameSession is the instance of the SoC game
- manages player turns and interactions between the players, the board, the boardview
- At start of each player turn performs dice roll, collects resource manifest from board based on dice roll, and passes resources back to players.
- Handles registration of account in game. Returns Player object which is token for all calls to GameManager.

GameSessionManager creates and manages instances of GameSession
- One only (Singleton?)
- Matches ClientAccount instances with GameSession instances
- Passes communication between GameController and GameSession

GameController
- is the channel from the client to the GameSession (GS could be local or on a server) via GameSessionManager. 
It passes through commands and passes back updated BoardView and/or PlayerView.
- Also handles the game setup conversation between client and GM
- Also handles retrieving of account by passing username and password.

ClientAccount holds data about a client including game played, games won etc.

ClientAccountManager holds all accounts
- given a username and password will return the matching account instance or error message if not.
