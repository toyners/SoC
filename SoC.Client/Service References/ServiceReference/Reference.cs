//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jabberwocky.SoC.Client.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameSessionManager.GameStates", Namespace="http://schemas.datacontract.org/2004/07/Jabberwocky.SoC.Service")]
    public enum GameSessionManagerGameStates : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lobby = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Setup = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Playing = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameInitializationData", Namespace="http://schemas.datacontract.org/2004/07/Jabberwocky.SoC.Service")]
    [System.SerializableAttribute()]
    public partial class GameInitializationData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BoardDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] BoardData {
            get {
                return this.BoardDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BoardDataField, value) != true)) {
                    this.BoardDataField = value;
                    this.RaisePropertyChanged("BoardData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerData", Namespace="http://schemas.datacontract.org/2004/07/Jabberwocky.SoC.Service")]
    [System.SerializableAttribute()]
    public partial class PlayerData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAnonymousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAnonymous {
            get {
                return this.IsAnonymousField;
            }
            set {
                if ((this.IsAnonymousField.Equals(value) != true)) {
                    this.IsAnonymousField = value;
                    this.RaisePropertyChanged("IsAnonymous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IServiceProvider", CallbackContract=typeof(Jabberwocky.SoC.Client.ServiceReference.IServiceProviderCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IServiceProvider {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/TryJoinGame")]
        void TryJoinGame(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/TryJoinGame")]
        System.Threading.Tasks.Task TryJoinGameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/TryJoinGameNew")]
        void TryJoinGameNew();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/TryJoinGameNew")]
        System.Threading.Tasks.Task TryJoinGameNewAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/TryLeaveGame")]
        void TryLeaveGame(System.Guid gameToken);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/TryLeaveGame")]
        System.Threading.Tasks.Task TryLeaveGameAsync(System.Guid gameToken);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/ConfirmGameInitialized")]
        void ConfirmGameInitialized(System.Guid gameToken);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/ConfirmGameInitialized")]
        System.Threading.Tasks.Task ConfirmGameInitializedAsync(System.Guid gameToken);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceProviderCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/StartTurn")]
        void StartTurn(System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/ConfirmGameIsOver")]
        void ConfirmGameIsOver();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/GameJoined")]
        void GameJoined();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/ConfirmGameSessionJoined")]
        void ConfirmGameSessionJoined(System.Guid gameToken, Jabberwocky.SoC.Client.ServiceReference.GameSessionManagerGameStates gameSession);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/ConfirmGameSessionReadyToLaunch")]
        void ConfirmGameSessionReadyToLaunch();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/ConfirmPlayerHasLeftGame")]
        void ConfirmPlayerHasLeftGame();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/ConfirmOtherPlayerHasLeftGame")]
        void ConfirmOtherPlayerHasLeftGame(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/InitializeGame")]
        void InitializeGame(Jabberwocky.SoC.Client.ServiceReference.GameInitializationData gameData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/ChooseTownLocation")]
        void ChooseTownLocation();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/ReceivePersonalMessage")]
        void ReceivePersonalMessage(string sender, string text);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/PlayerDataForJoiningClient")]
        void PlayerDataForJoiningClient(Jabberwocky.SoC.Client.ServiceReference.PlayerData playerData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/TownPlacedDuringSetup")]
        void TownPlacedDuringSetup(uint locationIndex);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceProviderChannel : Jabberwocky.SoC.Client.ServiceReference.IServiceProvider, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceProviderClient : System.ServiceModel.DuplexClientBase<Jabberwocky.SoC.Client.ServiceReference.IServiceProvider>, Jabberwocky.SoC.Client.ServiceReference.IServiceProvider {
        
        public ServiceProviderClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceProviderClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceProviderClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProviderClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProviderClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void TryJoinGame(string username) {
            base.Channel.TryJoinGame(username);
        }
        
        public System.Threading.Tasks.Task TryJoinGameAsync(string username) {
            return base.Channel.TryJoinGameAsync(username);
        }
        
        public void TryJoinGameNew() {
            base.Channel.TryJoinGameNew();
        }
        
        public System.Threading.Tasks.Task TryJoinGameNewAsync() {
            return base.Channel.TryJoinGameNewAsync();
        }
        
        public void TryLeaveGame(System.Guid gameToken) {
            base.Channel.TryLeaveGame(gameToken);
        }
        
        public System.Threading.Tasks.Task TryLeaveGameAsync(System.Guid gameToken) {
            return base.Channel.TryLeaveGameAsync(gameToken);
        }
        
        public void ConfirmGameInitialized(System.Guid gameToken) {
            base.Channel.ConfirmGameInitialized(gameToken);
        }
        
        public System.Threading.Tasks.Task ConfirmGameInitializedAsync(System.Guid gameToken) {
            return base.Channel.ConfirmGameInitializedAsync(gameToken);
        }
    }
}
