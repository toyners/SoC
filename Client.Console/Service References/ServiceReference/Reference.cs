//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jabberwocky.SoC.Client.Console.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IServiceProvider", CallbackContract=typeof(Jabberwocky.SoC.Client.Console.ServiceReference.IServiceProviderCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IServiceProvider {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProvider/JoinGame", ReplyAction="http://tempuri.org/IServiceProvider/JoinGameResponse")]
        bool JoinGame();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProvider/JoinGame", ReplyAction="http://tempuri.org/IServiceProvider/JoinGameResponse")]
        System.Threading.Tasks.Task<bool> JoinGameAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/LeaveGame")]
        void LeaveGame();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/LeaveGame")]
        System.Threading.Tasks.Task LeaveGameAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceProviderCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceProvider/StartTurn")]
        void StartTurn(System.Guid token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceProviderChannel : Jabberwocky.SoC.Client.Console.ServiceReference.IServiceProvider, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceProviderClient : System.ServiceModel.DuplexClientBase<Jabberwocky.SoC.Client.Console.ServiceReference.IServiceProvider>, Jabberwocky.SoC.Client.Console.ServiceReference.IServiceProvider {
        
        public ServiceProviderClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceProviderClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceProviderClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProviderClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProviderClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool JoinGame() {
            return base.Channel.JoinGame();
        }
        
        public System.Threading.Tasks.Task<bool> JoinGameAsync() {
            return base.Channel.JoinGameAsync();
        }
        
        public void LeaveGame() {
            base.Channel.LeaveGame();
        }
        
        public System.Threading.Tasks.Task LeaveGameAsync() {
            return base.Channel.LeaveGameAsync();
        }
    }
}
